# Server
HOST=0.0.0.0
PORT=3000
LOG_LEVEL=info

# Database (MySQL)
# Format: mysql://USER:PASS@HOST:PORT/DBNAME
DATABASE_URL=mysql://user:pass@localhost:3306/whatsapp_api

# Reconnect (socket) tuning
RECONNECT_INTERVAL=5000
MAX_RECONNECT_RETRIES=5
SSE_MAX_QR_GENERATION=5

# Ticketing
TICKETING_ENABLED=true
SLA_ENABLED=false
# Optional: auto-close minutes (if you implement a worker)
TICKET_AUTO_CLOSE_MINUTES=0

# Agents (optional)
# Either a CSV list of names, or JSON with id+name
# AGENTS=Alice,Bob,Charlie
# AGENTS_JSON=[{"id":"alice","name":"Alice"},{"id":"bob","name":"Bob"}]

# AI (OpenAI-compatible). Enable via DB (AiSetting) or env fallback below.
# If you prefer env fallback, set AI_ENABLED=true and fill base URL + key.
AI_ENABLED=false
AI_BASE_URL=https://api.openai.com/v1
AI_API_KEY=sk-your_api_key
AI_MODEL=gpt-4o-mini
AI_PROMPT=You are a helpful WhatsApp assistant.
AI_TEMP=0.7

# Auth header customization (optional)
# Set AI_AUTH_HEADER to a header name (e.g., Authorization) or to 'none' to disable and use AI_EXTRA_HEADERS only.
AI_AUTH_HEADER=Authorization
AI_AUTH_SCHEME=Bearer

# Extra headers as JSON string (optional)
# Example (AgentRouter):
# AI_EXTRA_HEADERS={"X-API-Key":"your_key"}
AI_EXTRA_HEADERS=

# Backwards compatibility (optional): if set, used as fallback API key
OPENAI_API_KEY=

